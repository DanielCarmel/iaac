name: CI/CD
run-name: ${{ github.actor }} is running GitHub Actions
permissions:
  id-token: write  # for AWS assume role(ECR push)
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
# env:
  # TF_CLOUD_ORGANIZATION: "carmel-test"
  # TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  # TF_WORKSPACE: "test-terraform-aws"
  # CONFIG_DIRECTORY: "./terraform"
jobs:
  validate:
    name: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pipenv"
      - name: Install pipenv
        uses: tiagovrtr/actions-pipenv@v1
        with:
          pipenv-version: '2023.12.1'
      - name: Pipenv install dependencies
        run: pipenv install --dev --deploy
      - name: Lint with flake8
        run: |
          pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build-and-push-docker-ecr:
    name: Build and push Docker to ECR
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::642069671695:role/github-actions
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push image to Amazon ECR
        shell: bash
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.repository }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build . -t "$ECR_REGISTRY/${ECR_REPOSITORY,,}:$IMAGE_TAG"
          docker push "$ECR_REGISTRY/${ECR_REPOSITORY,,}:$IMAGE_TAG"
          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/${ECR_REPOSITORY,,}"
          echo "image_tag=$IMAGE_TAG" 
          echo "full_image=$ECR_REGISTRY/${ECR_REPOSITORY,,}:$IMAGE_TAG"
  create-aws-infra-terraform:
    name: Create AWS infrastructure with Terraform
    runs-on: ubuntu-latest
    needs: build-and-push-docker-ecr
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.0"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate
      - name: Terraform Apply
        shell: bash
        env:
          IMAGE_TAG: ${{ github.sha }}
          ECR_REPOSITORY: ${{ github.repository }}
          # TF_VAR_image_tag: ${{ github.sha }}
          # TF_VAR_ecr_repository: ${{ github.repository }}
        working-directory: ./terraform
        run: terraform apply -auto-approve -var "image_tag="${IMAGE_TAG}" -var "ecr_repository=${ECR_REPOSITORY,,}"
        # run: terraform apply -auto-approve